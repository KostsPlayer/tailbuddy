@use "../../../helpers/mixins" as m;
@use "../../../helpers/variables" as v;

@mixin search-container($two: false) {
  @include m.flex($direction: column, $align: flex-start, $justify: flex-start);
  height: 100%;
  width: 100%;
  position: relative;

  @if $two == false {
    padding: 0.2rem 1.9rem 0.2rem 1.2rem;
  } @else {
    padding: 0.2rem 0.7rem 0.2rem 1.2rem;
  }

  &:not(:nth-child(3)):after {
    content: "";
    position: absolute;
    top: -25%;
    right: 0;
    width: 0.1vw;
    height: 150%;
    background-color: v.$main-light;
  }

  .label {
    font-size: 0.85rem;
    color: v.$main-dark;
    line-height: 100%;
  }

  input {
    width: 100%;
    height: 100%;
    outline: none;
    border: none;
    font-size: 1rem;
    font-weight: 700;
    font-family: v.$lato;

    &::placeholder {
      color: adjust-color($color: #fff, $blackness: 25%);
    }
  }
}

@mixin hero() {
  background-color: v.$main-light;
  padding: 0 v.$main-px v.$main-py;
  @include m.flex();
  position: relative;

  &-preface {
    @include m.flex($direction: column);
    position: relative;

    svg {
      path {
        fill: v.$main-orange;
      }
    }

    img {
      position: absolute;
      height: auto;

      &:nth-child(2) {
        width: 5.6rem;
        top: 3%;
        left: 18%;
      }

      &:nth-child(3) {
        width: 5.1rem;
        bottom: 4%;
        right: 18%;
      }

      &:nth-child(4) {
        width: 3.6rem;
        bottom: 11%;
        right: 42%;
      }
    }

    .container {
      position: absolute;
      top: 30.5%;
      left: 19%;

      .text {
        font-family: v.$funnel;
        color: #fff;
        line-height: 140%;
        font-weight: 500;
        font-size: 1.5rem;

        .big {
          font-size: 2.1rem;
          font-weight: 900;
        }

        .small {
          font-size: 1.1rem;
          font-weight: 100;
        }

        &:last-child {
          text-transform: uppercase;
        }
      }
    }
  }

  &-image {
    width: 28rem;
    height: auto;
    object-fit: cover;
  }

  &-search {
    width: v.$main-width;
    position: absolute;
    bottom: -6.25%;
    background-color: #fff;
    border-radius: 0.6rem;
    padding: 0.45rem;
    display: grid;
    grid-template-columns: 1fr 0.9fr 1fr auto;
    overflow: hidden;

    .by-anything {
      @include search-container();
    }

    .by-category {
      @include search-container($two: true);

      .default {
        width: 100%;
        @include m.flex($justify: space-between);

        &-display {
          font-weight: 700;
          width: 100%;
          height: 100%;
          margin-right: 1.1rem;
          margin-top: .1rem;
          @include m.flex($justify: flex-start);
        }

        .material-symbols-rounded {
          font-variation-settings: "FILL" 0, "wght" 200, "GRAD" 0, "opsz" 24;
          padding: 0.05rem;
          border: solid 1.25px v.$main-light;
          @include m.flex();
          border-radius: 0.3rem;
          cursor: pointer;
        }
      }
    }

    .by-location {
      @include search-container();
    }

    .go-search {
      background-color: v.$main-orange;
      border-radius: 0.3rem;
      width: 3.6rem;
      height: 100%;
      @include m.flex();
      border: none;
      outline: none;
      color: #fff;
      cursor: pointer;

      &:hover {
        background-color: adjust-color($color: v.$main-orange, $lightness: -4%);
        transition: all ease-out 0.4s;
      }
    }
  }

  @media (max-width: 767.98px) {
    flex-direction: column;

    &-image {
      width: 20rem;
      margin-left: 1rem;
    }
  }
}
